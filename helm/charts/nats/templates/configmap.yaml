---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "nats.name" . }}-config
  labels:
    app: {{ template "nats.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
data:
  nats.conf: |
    # PID file shared with configuration reloader.
    pid_file: "/var/run/nats/nats.pid"

    ###############
    #             #
    # Monitoring  #
    #             #
    ###############
    http: 8222
    server_name: $POD_NAME

    {{ if .Values.cluster.enabled }}
    ###################################
    #                                 #
    # NATS Full Mesh Clustering Setup #
    #                                 #
    ###################################
    cluster {
      port: 6222

      routes = [
        {{ template "nats.clusterRoutes" . }}
      ]
      cluster_advertise: $CLUSTER_ADVERTISE

      connect_retries: {{ .Values.nats.connectRetries }}
    }
    {{ end }}

    {{- if and .Values.nats.advertise .Values.nats.externalAccess }}
    include "advertise/client_advertise.conf"
    {{- end }}

    {{- if .Values.leafnodes.enabled }}
    leafnodes {
      listen: "0.0.0.0:7422"
      {{ if and .Values.nats.advertise .Values.nats.externalAccess }}
      include "advertise/gateway_advertise.conf"
      {{ end }}
    }
    {{ end }}

    ####################
    #                  #
    # Logging Options  #
    #                  #
    ####################
    {{- with .Values.nats.logging.debug }}
    debug: {{ . }}
    {{- end }}

    {{- with .Values.nats.logging.trace }}
    trace:  {{ . }}
    {{- end }}

    {{- with .Values.nats.logging.logtime }}
    logtime: {{ . }}
    {{- end }}

    {{- with .Values.nats.logging.connectErrorReports }}
    connect_error_reports: {{ . }}
    {{- end }}

    {{- with .Values.nats.logging.reconnectErrorReports }}
    reconnect_error_reports: {{ . }}
    {{- end }}

    ##################
    #                #
    # Server Limits  #
    #                #
    ##################
    {{- with .Values.nats.limits.maxConnections }}
    max_connections: {{ . }}
    {{- end }}
    {{- with .Values.nats.limits.maxSubscriptions }}
    max_subscriptions: {{ . }}
    {{- end }}
    {{- with .Values.nats.limits.maxPending }}
    max_pending: {{ . }}
    {{- end }}
    {{- with .Values.nats.limits.maxControlLine }}
    max_control_line: {{ . }}
    {{- end }}
    {{- with .Values.nats.limits.maxPayload }}
    max_payload: {{ . }}
    {{- end }}
    {{- with .Values.nats.pingInterval }}
    ping_interval: {{ . }}
    {{- end }}
    {{- with .Values.nats.maxPings }}
    ping_max: {{ . }}
    {{- end }}
    {{- with .Values.nats.writeDeadline }}
    write_deadline: {{ . | quote }}
    {{- end }}
    {{- with .Values.nats.writeDeadline }}
    lame_duck_duration:  {{ . | quote }}
    {{- end }}

    {{- if .Values.auth.enabled }}
    ##################
    #                #
    # Authorization  #
    #                #
    ##################
    {{- if eq .Values.auth.resolver.type "memory" }}
    resolver: MEMORY
    include "accounts/{{ .Values.auth.resolver.configMap.key }}"
    {{- end }}

    {{- if eq .Values.auth.resolver.type "URL" }}
    resolver: URL({{ .Values.auth.resolver.url }})
    operator: {{ .Values.auth.operator }}
    system_account: {{ .Values.auth.systemAccount }}
    {{- end }}

    {{- end }}
